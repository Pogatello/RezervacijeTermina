// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace ZavrsniRad.RezervacijeTermina.Pages
{
    #line hidden
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\Marko\source\repos\ZavrsniRad.RezervacijeTermina\ZavrsniRad.RezervacijeTermina\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Marko\source\repos\ZavrsniRad.RezervacijeTermina\ZavrsniRad.RezervacijeTermina\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Marko\source\repos\ZavrsniRad.RezervacijeTermina\ZavrsniRad.RezervacijeTermina\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Marko\source\repos\ZavrsniRad.RezervacijeTermina\ZavrsniRad.RezervacijeTermina\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Marko\source\repos\ZavrsniRad.RezervacijeTermina\ZavrsniRad.RezervacijeTermina\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Marko\source\repos\ZavrsniRad.RezervacijeTermina\ZavrsniRad.RezervacijeTermina\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Marko\source\repos\ZavrsniRad.RezervacijeTermina\ZavrsniRad.RezervacijeTermina\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Marko\source\repos\ZavrsniRad.RezervacijeTermina\ZavrsniRad.RezervacijeTermina\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Marko\source\repos\ZavrsniRad.RezervacijeTermina\ZavrsniRad.RezervacijeTermina\_Imports.razor"
using ZavrsniRad.RezervacijeTermina;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\Marko\source\repos\ZavrsniRad.RezervacijeTermina\ZavrsniRad.RezervacijeTermina\_Imports.razor"
using ZavrsniRad.RezervacijeTermina.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Marko\source\repos\ZavrsniRad.RezervacijeTermina\ZavrsniRad.RezervacijeTermina\Pages\CreateReservationEvent.razor"
using ZavrsniRad.RezervacijeTermina.Data.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Marko\source\repos\ZavrsniRad.RezervacijeTermina\ZavrsniRad.RezervacijeTermina\Pages\CreateReservationEvent.razor"
using ZavrsniRad.RezervacijeTermina.Data.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Marko\source\repos\ZavrsniRad.RezervacijeTermina\ZavrsniRad.RezervacijeTermina\Pages\CreateReservationEvent.razor"
using ZavrsniRad.RezervacijeTermina.Data.Messaging.ReservationEvent.Request;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Marko\source\repos\ZavrsniRad.RezervacijeTermina\ZavrsniRad.RezervacijeTermina\Pages\CreateReservationEvent.razor"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\Marko\source\repos\ZavrsniRad.RezervacijeTermina\ZavrsniRad.RezervacijeTermina\Pages\CreateReservationEvent.razor"
using System.Security.Claims;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\Marko\source\repos\ZavrsniRad.RezervacijeTermina\ZavrsniRad.RezervacijeTermina\Pages\CreateReservationEvent.razor"
using Blazorise;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\Marko\source\repos\ZavrsniRad.RezervacijeTermina\ZavrsniRad.RezervacijeTermina\Pages\CreateReservationEvent.razor"
using System;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\Marko\source\repos\ZavrsniRad.RezervacijeTermina\ZavrsniRad.RezervacijeTermina\Pages\CreateReservationEvent.razor"
using System.IO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Marko\source\repos\ZavrsniRad.RezervacijeTermina\ZavrsniRad.RezervacijeTermina\Pages\CreateReservationEvent.razor"
           [Authorize]

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/createReservation")]
    public partial class CreateReservationEvent : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 128 "C:\Users\Marko\source\repos\ZavrsniRad.RezervacijeTermina\ZavrsniRad.RezervacijeTermina\Pages\CreateReservationEvent.razor"
       
    bool showPopup = false;
    string errorMessage;
    ReservationEvent reservation = new ReservationEvent();
    string userId;

    List<DayWithWorkingTime> DaysWithWorkingTime;

    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationStateTask { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateTask;
        userId = authState.User.Claims.FirstOrDefault(x => x.Type == ClaimTypes.NameIdentifier)?.Value;

        DaysWithWorkingTime = InitializeDays();

        //inizialize date for datepicker
        reservation.SetActiveFrom(DateTime.Now);
    }

    public async Task CreateReservationEventAsync()
    {
        var request = new CreateReservationEventRequest
        {
            ReservationEvent = reservation,
            UserId = userId,
            DayWithWorkingTimes = DaysWithWorkingTime
        };

        var response = await ReservationService.CreateReservationEventAsync(request);

        if (response.Success)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            ShowPopupWithErrorMessage(response.ErrorMessage);
        }
    }

    void ShowPopupWithErrorMessage(string message)
    {
        errorMessage = message;
        showPopup = true;
    }

    void ClosePopup()
    {
        showPopup = false;
    }

    Task OnCaptionChanged(string value)
    {
        reservation.SetCaption(value);

        return Task.CompletedTask;
    }

    Task OnDescriptionChanged(string value)
    {
        reservation.SetDescription(value);

        return Task.CompletedTask;
    }

    Task OnAdditionalContactChanged(string value)
    {
        reservation.SetAdditionalContact(value);

        return Task.CompletedTask;
    }

    Task OnCanUserMakeReservationChanged(bool value)
    {
        reservation.SetCanUserMakeReservation(value);

        return Task.CompletedTask;
    }

    Task OnIsReservationConfirmationNeededChanged(bool value)
    {
        reservation.SetIsReservationConfirmationNeeded(value);

        return Task.CompletedTask;
    }

    Task OnActiveFromChanged(DateTime date)
    {
        reservation.SetActiveFrom(date);

        return Task.CompletedTask;
    }

    Task OnActiveToChanged(DateTime? date)
    {
        reservation.SetActiveTo(date);

        return Task.CompletedTask;
    }

    async Task OnFileInputChanged(FileChangedEventArgs e)
    {
        try
        {
            var file = e.Files.FirstOrDefault();
            if (file != null)
            {
                using (var stream = new MemoryStream())
                {
                    await file.WriteToStreamAsync(stream);
                    stream.Seek(0, SeekOrigin.Begin);

                    var bytes = stream.ToArray();
                    var content = Convert.ToBase64String(bytes);

                    reservation.SetAttachmentLogo(new AttachmentLogo(file.Name, content));
                }
            }

        }
        catch (Exception)
        {
            ShowPopupWithErrorMessage("Error uploading file. Please try again.");
        }
        finally
        {
            this.StateHasChanged();
        }
        return;
    }

    List<DayWithWorkingTime> InitializeDays()
    {
        var days = new List<DayWithWorkingTime>();

        days.Add(new DayWithWorkingTime { DayOfWeek = DayOfWeek.Monday, Day = "Ponedjeljak", WorkingFrom = new TimeSpan(8, 0, 0), WorkingTo = new TimeSpan(16, 0, 0) });
        days.Add(new DayWithWorkingTime { DayOfWeek = DayOfWeek.Tuesday, Day = "Utorak", WorkingFrom = new TimeSpan(8, 0, 0), WorkingTo = new TimeSpan(16, 0, 0) });
        days.Add(new DayWithWorkingTime { DayOfWeek = DayOfWeek.Wednesday, Day = "Srijeda", WorkingFrom = new TimeSpan(8, 0, 0), WorkingTo = new TimeSpan(16, 0, 0) });
        days.Add(new DayWithWorkingTime { DayOfWeek = DayOfWeek.Thursday, Day = "ÄŒetvrtak", WorkingFrom = new TimeSpan(8, 0, 0), WorkingTo = new TimeSpan(16, 0, 0) });
        days.Add(new DayWithWorkingTime { DayOfWeek = DayOfWeek.Friday, Day = "Petak", WorkingFrom = new TimeSpan(8, 0, 0), WorkingTo = new TimeSpan(16, 0, 0) });
        days.Add(new DayWithWorkingTime { DayOfWeek = DayOfWeek.Saturday, Day = "Subota", WorkingFrom = new TimeSpan(8, 0, 0), WorkingTo = new TimeSpan(16, 0, 0) });
        days.Add(new DayWithWorkingTime { DayOfWeek = DayOfWeek.Sunday, Day = "Nedjelja", WorkingFrom = new TimeSpan(8, 0, 0), WorkingTo = new TimeSpan(16, 0, 0) });

        return days;

    }

    void OnChangedWorkingFrom(DayWithWorkingTime input, TimeSpan? time)
    {
        input.WorkingFrom = RoundTime(time);
    }

    void OnChangedWorkingTo(DayWithWorkingTime input, TimeSpan? time)
    {
        input.WorkingTo = RoundTime(time);
    }

    TimeSpan? RoundTime(TimeSpan? input)
    {
        if (input.HasValue)
        {
            if (reservation.ReservationDurationType == ReservationDurationType.HalfHour)
            {
                if (input.Value.Minutes > 0 && input.Value.Minutes < 30)
                {
                    return new TimeSpan(input.Value.Hours, 0, 0);
                }

                if (input.Value.Minutes > 30)
                {
                    return new TimeSpan(input.Value.Hours, 30, 0);
                }
            }
            else if (reservation.ReservationDurationType == ReservationDurationType.Hour)
            {
                if (input.Value.Minutes > 0)
                {
                    return new TimeSpan(input.Value.Hours, 0, 0);
                }
            }
        }

        return input;
    }

    void OnSelectedValueChangedReservationDurationType(int value)
    {
        reservation.SetReservationDurationType((ReservationDurationType)value);
        DaysWithWorkingTime = InitializeDays();
    }


#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager NavigationManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IReservationService ReservationService { get; set; }
    }
}
#pragma warning restore 1591
